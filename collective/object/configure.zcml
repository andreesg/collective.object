<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:grok="http://namespaces.zope.org/grok"
    xmlns:plone="http://namespaces.plone.org/plone"
    i18n_domain="collective.object">

  <!-- Include configuration for dependencies listed in setup.py -->
  
  <includeDependencies package="." />

  <!-- Grok the package to initialize schema interfaces and content classes -->
  <grok:grok package="." />

  <!-- Register a resource directory from which we can deploy static
   resource files. -->
  <browser:resourceDirectory
    name="collective.object"
    directory="resources" />

  <i18n:registerTranslations directory="locales"/>

  <!-- Register an extension profile to make the product installable
       in Plone -->
  <genericsetup:registerProfile
      name="default"
      title="Object"
      directory="profiles/default"
      description="Information about an object typically collected by museums"
      provides="Products.GenericSetup.interfaces.EXTENSION"
      />
    
  <browser:page
      name="view"
      for="collective.object.object.IObject"
      class="collective.object.utils.views.ObjectView"
      template="object_templates/view.pt"
      permission="zope2.View"
  />

  <browser:page
      for="*"
      name="collective.object.slideshowmacro"
      template="object_templates/slideshowmacro.pt"
      permission="zope.Public"
  />
  
  <!-- Already fixed -->
  <adapter name="object_number" factory=".indexers.object_number" />
  <adapter name="identification_objectNumber" factory=".indexers.identification_objectNumber" />
  <adapter name="object_priref" factory=".indexers.object_priref" />

  <!-- -*- extra stuff goes here -*- -->
  <plone:static
    directory="resources"
    type="plone"
    name="collective.object"
  />

  <adapter name="documentation_author" factory=".indexers.documentation_author" />

  <utility
    component=".utils.vocabularies.AuthorVocabularyFactory"
    name="collective.object.author"
    />

</configure>
